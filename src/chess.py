# -*- coding: utf-8 -*-
"""chess.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C2bgOTbAiWpUFWBObhHHdo5XaiT-IFVm

Objetivo dessa bagaça é arrumar a cagada da fide
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
pd.plotting.register_matplotlib_converters()
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns
print('import completo!')

"""Os arquivos estão localizados no meu git, o código abaixo é só para testar a conexão com eles."""

test_data_path = 'https://raw.githubusercontent.com/GyaRyu/chessdata/master/data/btz/blitz_apr13frl.txt'
test_data = pd.read_fwf(test_data_path)
test_data.head()

"""Agora é necessário a sigla dos meses e os anos que a fide publicou os rating para blitz."""

#template path https://raw.githubusercontent.com/GyaRyu/chessdata/master/data/btz/blitz_(month)(year)frl.txt
months  = ['jan','feb','mar','apr','may','jun','jul','aug','sep','oct','nov','dec']
years   = [str(n) for n in range(13,20)]
print(months)
print(years)

"""Logo depois a variável 'dates' ira armazenar todos as datas das publicações."""

dates = []
for year in years:
  for month in months:
    dates.append(month+year)
    pass
  pass
dates.append('jan20')
print(dates)
print(len(dates))

"""Finalmente a variável files irá armazenar o nome de todos os arquivos."""

files = ['blitz_'+date+'frl.txt' for date in dates]
print(files)

"""Os arquivos estão localizados em um diretório do git que está armazenado em 'url_dir', logo 'url_dir'+'files' é o local dos arquivos."""

url_dir = 'https://raw.githubusercontent.com/GyaRyu/chessdata/master/data/btz/'
datas = []
for file in files:
  print('\ncarregando arquivo "{}" :{}%...'.format(file,int((100*files.index(file)+1)/len(files))))
  datas.append(pd.read_fwf(url_dir+file))
  pass
print('\ntudo carregado com sucesso!')

"""Pronto! Todos os arquivos estão carregados!
Agora vamos trocar as colunas pois no lugar do rating a fide botou os meses com letras maiusculas ou minusculas. Aproveitando também para dropar colunas desnecessárias.
"""

for idx in range(len(datas)):
  datas[idx] = datas[idx].loc[:, ~datas[idx].columns.str.contains('^Unnamed')]
  datas[idx].drop(columns='FOA', inplace=True, errors='ignore')
  datas[idx].columns = ['id','name','fed','sex','tit','wtit','otit','rat','gms','k','born','flg']
  pass
datas[80].head()

"""Agora depois de arrumar a cagada da fide podemos selecionar o rating do Carlsen."""

magnus_rat = []
for data in datas:
  data = data.loc[data.name == 'Carlsen, Magnus']
  idx = data.index[0]
  magnus_rat.append(data.loc[idx,'rat'])
  pass

sns.set_style('dark')
plt.figure(figsize=(60,5))
plt.title('rating do magnus')
plt.xlabel('tempo')
plt.ylabel('rating')
sns.lineplot(x=dates,y=magnus_rat)